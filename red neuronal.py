# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KFIpR1RZkp5m0B_ADSZRUBLTnkt8O1Xp
"""

import pandas as pd
from sklearn.neural_network import MLPClassifier
from sklearn.model_selection import train_test_split

data = {
    'Matem치ticas': [80, 70, 90, 60, 85, 75, 95, 65, 80, 60, 75],
    'Lengua':      [85, 90, 80, 70, 95, 85, 90, 80, 75, 65, 60],
    'Ciencias':    [90, 85, 95, 80, 90, 85, 95, 90, 60, 90, 65],
    'Historia':    [80, 85, 90, 75, 72, 80, 90, 85, 66, 62, 80],
    'Rendimiento': [1,  1,  1,  0,  1,  1,  1,  1,  0,  0, 0]
}

df = pd.DataFrame(data)

X = df.drop('Rendimiento', axis=1)
y = df['Rendimiento']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

mlp = MLPClassifier(hidden_layer_sizes=(10,), max_iter=1000)
mlp.fit(X_train, y_train)

example = [[90, 85,60, 80]]  # calificaciones de un estudiante
prediction = mlp.predict(example)
print("Predicci칩n:", prediction)

rendimiento = prediction  # reemplaza este valor con la predicci칩n de tu red neuronal

if rendimiento == 0:
    print("Rendimiento bajo")
elif rendimiento == 1:
    print("Rendimiento bueno")
else:
    print("Valor de rendimiento no v치lido")